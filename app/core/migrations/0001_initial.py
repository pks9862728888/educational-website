# Generated by Django 3.0.6 on 2020-05-18 16:02

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator], verbose_name='Email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Username')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_student', models.BooleanField(default=False, verbose_name='Is Student')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Is Teacher')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('is_active', 'user_is_active'), ('is_staff', 'user_is_staff'), ('is_student', 'user_is_student'), ('is_teacher', 'user_is_teacher')),
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.ProhibitNullCharactersValidator], verbose_name='Classroom name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classroom', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, validators=[django.core.validators.ProhibitNullCharactersValidator], verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, validators=[django.core.validators.ProhibitNullCharactersValidator], verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Gender')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone')),
                ('date_of_birth', models.DateField(blank=True, max_length=10, null=True, verbose_name='Date of Birth')),
                ('country', django_countries.fields.CountryField(countries=core.models.OperationalCountries, default='IN', max_length=2, verbose_name='Country')),
                ('primary_language', models.CharField(blank=True, choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], default='EN', max_length=3, verbose_name='Primary language')),
                ('secondary_language', models.CharField(blank=True, choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], max_length=3, null=True, verbose_name='Secondary language')),
                ('tertiary_language', models.CharField(blank=True, choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], max_length=3, null=True, verbose_name='Tertiary language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, core.models.Languages),
        ),
        migrations.CreateModel(
            name='ProfilePictures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.user_profile_picture_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image')),
                ('uploaded_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Uploaded on')),
                ('class_profile_picture', models.BooleanField(default=False, verbose_name='ClassProfilePicture')),
                ('public_profile_picture', models.BooleanField(default=True, verbose_name='PublicProfilePicture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_pictures', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Profile Pictures',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.ProhibitNullCharactersValidator], verbose_name='Subject name')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classroom_subject', to='core.Classroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subject', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'classroom', 'name')},
            },
        ),
    ]
